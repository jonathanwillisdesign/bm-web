---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import CaseStudyLayout from '../../layouts/CaseStudyLayout.astro';

export async function getStaticPaths() {
  const caseStudies = await getCollection('case-studies');

  // Sort by publishedAt date to ensure consistent ordering
  const sortedStudies = caseStudies.sort((a, b) =>
    new Date(b.data.publishedAt).getTime() - new Date(a.data.publishedAt).getTime()
  );

  return sortedStudies.map((study, index, array) => {
    // Calculate next case study (loop to first if at end)
    const nextIndex = (index + 1) % array.length;
    const nextStudy = array[nextIndex];

    return {
      params: { slug: study.slug },
      props: {
        study,
        nextStudy,
      },
    };
  });
}

interface Props {
  study: CollectionEntry<'case-studies'>;
  nextStudy: CollectionEntry<'case-studies'>;
}

const { study, nextStudy } = Astro.props;

// Get all services to map IDs to titles
const allServices = await getCollection('services');
const serviceMap = new Map(allServices.map(s => [s.id, s.data.title]));
---

<CaseStudyLayout
  study={study}
  nextStudy={nextStudy}
  serviceMap={serviceMap}
/>
